#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <stdlib.h>

#include <sqlite3.h>


sqlite3* open_database(char* filename)
{
	sqlite3* DB;

	int rc = sqlite3_open_v2(filename, &DB, SQLITE_OPEN_READONLY, NULL);
	if (rc != SQLITE_OK)
	{
		printf("Error: couldn't open database %s\n", filename);
		return NULL;
	}

	return DB;
}

sqlite3_stmt* login(sqlite3* DB, char* username, char* password)
{
	char query[1024];
	sqlite3_stmt *result;
	int rc;
	
	snprintf(query, 1024, "SELECT * FROM users WHERE username = '%s' AND password = '%s';", username, password);
	
	printf("%s", query);
	rc = sqlite3_prepare(DB, query, -1, &result, NULL);

	{% if options["difficulty"] == "Direct" %}
	if (rc != SQLITE_OK)
	{
		fprintf(stderr, "SQLITE error: %s\n", sqlite3_errmsg(DB));
	}
	{% endif %}
	
	return result;
}

int get_login(sqlite3_stmt *result)
{

	if (sqlite3_step(result) != SQLITE_ROW) /* no result found */
	{
		printf("Invalid username or password!\n");
		return 0;
	}

	const unsigned char *rUsername = sqlite3_column_text(result, 1);
	const unsigned char *rPassword = sqlite3_column_text(result, 2);
	
	printf("Successful login: Welcome back %s!\n", rUsername);
	{% if options["difficulty"] == "Direct" %}
	printf("Please do not forget your password: %s\n", rPassword);
	{% endif %}
	return 1;
}

int main()
{
	{% if options["username_buffer_size"] %}
		{% set buffer_size = options["username_buffer_size"] %}
	{% else %}
		{% set buffer_size = 128 %}
	{% endif %}
	char username[{{ buffer_size }}];
	char password[40];

	sqlite3* DB = open_database("database.db");
	
	if (DB == NULL)
	{
		return 1;
	}
	
	int login_successful = 0;
	while (!login_successful) /* Login loop */
	{
		printf("Enter your username:");
		fgets(username, {{ buffer_size }}, stdin);
		username[strcspn(username, "\n")] = 0;
		
		printf("Enter your password:");
		fgets(password, 40, stdin);
		password[strcspn(password, "\n")] = 0;

		sqlite3_stmt *result = login(DB, username, password);
		login_successful = get_login(result);
	}

	sqlite3_close(DB);
	
    return 0;
}
