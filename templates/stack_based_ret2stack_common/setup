#!/bin/bash

next_user=$(get-from-context "next-user")
difficulty=$(get-from-context "difficulty")
bits=$(get-from-context "bits")
open_source=$(get-from-context "open_source")
show_compilation=$(get-from-context "show_compilation")

# Parse the template and compile the challenge
parse-template challenge.j2 challenge.c

options="-Wl,-z,relro,-z,now"

# disable ASLR only for ret2libc and stack
if [[ "${difficulty}" == "Lib-C" || "${difficulty}" == "Stack" ]]; then
    echo 0 | sudo tee /proc/sys/kernel/randomize_va_space
fi

# add no executable stack for other cases
if [[ "${difficulty}" != "Stack" ]]; then
    options="${options},-z,noexecstack"
else
    options="${options},-z,execstack"
fi

if [[ "${difficulty}" == "ROP" ]]; then
    options="${options} -static"
fi

# if a 32 bit executable as requested
if [[ "${bits}" == "on" ]]; then
    options="${options} -m32"
fi

compilation_command="gcc challenge.c -o challenge -fno-stack-protector -no-pie ${options}"
/bin/bash -c "${compilation_command}"

set-default-ownership .

chmod 555 challenge

if [ "${open_source}" == "on" ]; then
    chmod 444 challenge.c
else
    chmod 000 challenge.c
fi

add-wrapper challenge sguid